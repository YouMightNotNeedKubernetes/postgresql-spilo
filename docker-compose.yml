x-deploy: &x-default-deploy
  replicas: ${PGSQL_REPLICAS:-3}
  placement:
    max_replicas_per_node: 1
    constraints:
      - node.labels.postgres == true
    preferences:
      - spread: node.labels.postgres
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 120s
  update_config:
    parallelism: 1
    delay: 10s
    order: stop-first
  rollback_config:
    parallelism: 1
    delay: 10s
    order: stop-first

x-logging: &x-default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  postgres:
    image: ghcr.io/zalando/spilo-15:3.0-p1
    hostname: postgres-{{.Task.Slot}}
    env_file: .env
    environment:
      - "SCOPE=pgsql"
      - "ENABLE_PG_MON=true"
      - "PGVERSION=15"
      - "PGROOT=/home/postgres/pgdata/pgroot"
      - "SPILO_PROVIDER=local"
      - "SPILO_CONFIGURATION={bootstrap: {initdb: [{auth-host: md5}, {auth-local: trust}]}}"
    networks:
      - postgres_default
      - etcd_area_lan
    volumes:
      - postgres_data:/home/postgres/pgdata
    cap_add:
      - "SYS_NICE"
    deploy: *x-default-deploy
    logging: *x-default-logging

  loadbalancer:
    image: haproxytech/haproxy-alpine:latest
    networks:
      - postgres_default
    ports:
      - "${PGSQL_MASTER_PORT:-5432}:5000" # pgsql_master
      - "${PGSQL_REPLICAS_PORT:-5433}:5001" # pgsql_replicas
      - "${PGSQL_SPILO_PORT:-5480}:8008" # pgsql_spilo_api
      - "${PGSQL_STATS_PORT:-5484}:8404" # stats
    configs:
      - source: haproxy.cfg
        target: /usr/local/etc/haproxy/haproxy.cfg
    deploy:
      replicas: ${PGSQL_LOADBALANCER_REPLICAS:-3}
    logging: *x-default-logging

networks:
  postgres_default:

  etcd_area_lan:
    name: etcd_area_lan
    external: true

volumes:
  postgres_data:
    name: postgres_data
    external: true

configs:
  haproxy.cfg:
    file: services/haproxy/haproxy.cfg
